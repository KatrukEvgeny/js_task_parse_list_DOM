{"version":3,"sources":["scripts/main.js"],"names":["list","document","querySelectorAll","sortList","arrPeople","map","el","innerText","dataset","position","salary","replace","age","sort","a","b","salaryNum","querySelector","innerHTML","join","getEmployees"],"mappings":";AAAA,aA4CA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EA1CA,IAAMA,EAAOC,SAASC,iBAAiB,MAEvC,SAASC,IACDC,IAAAA,EAAY,EAAIJ,GAAMK,IAAI,SAAAC,GACvB,MAAA,CACGA,KAAAA,EAAGC,UACCD,SAAAA,EAAGE,QAAQC,SACbH,OAAAA,EAAGE,QAAQE,OACR,WAACJ,EAAGE,QAAQE,OAAOC,QAAQ,QAAS,IAC1CL,IAAAA,EAAGE,QAAQI,OAItBR,EAAUS,KAAK,SAACC,EAAGC,GAAMA,OAAAA,EAAEC,UAAYF,EAAEE,YAExBf,SAASgB,cAAc,MAE/BC,UAAYd,EAAUC,IAAI,SAAAC,GAGZA,MAAAA,+BAAAA,OAAAA,EAAE,SACJA,4BAAAA,OAAAA,EAAE,OACLA,yBAAAA,OAAAA,EAAE,IAEZA,wBAAAA,OAAAA,EAAE,KANR,mBAQCa,KAAK,IAKV,SAASC,IACA,OAAA,EAAIpB,GAAMK,IAAI,SAAAC,GACZ,MAAA,CACGA,KAAAA,EAAGC,UACCD,SAAAA,EAAGE,QAAQC,SACbH,OAAAA,EAAGE,QAAQE,OACdJ,IAAAA,EAAGE,QAAQI,OARxBT,EAASH,GAaToB,EAAapB","file":"main.668b04f7.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst list = document.querySelectorAll('li');\n\nfunction sortList() {\n  const arrPeople = [...list].map(el => {\n    return {\n      'name': el.innerText,\n      'position': el.dataset.position,\n      'salary': el.dataset.salary,\n      'salaryNum': +el.dataset.salary.replace(/[$,]/g, ''),\n      'age': el.dataset.age,\n    };\n  });\n\n  arrPeople.sort((a, b) => b.salaryNum - a.salaryNum);\n\n  const ulInsert = document.querySelector('ul');\n\n  ulInsert.innerHTML = arrPeople.map(el => {\n    return (\n      `<li\n        data-position=\"${el['position']}\"\n        data-salary=\"${el['salary']}\"\n        data-age=\"${el['age']}\"\n      >\n        ${el['name']}\n      </li>`);\n  }).join('');\n}\n\nsortList(list);\n\nfunction getEmployees() {\n  return [...list].map(el => {\n    return {\n      'name': el.innerText,\n      'position': el.dataset.position,\n      'salary': el.dataset.salary,\n      'age': el.dataset.age,\n    };\n  });\n}\n\ngetEmployees(list);\n"]}